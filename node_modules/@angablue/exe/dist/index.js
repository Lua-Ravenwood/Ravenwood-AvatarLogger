"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
const pkg_1 = require("pkg");
const ResEdit = __importStar(require("resedit"));
const fs_1 = require("fs");
// Language code for en-us and encoding codepage for UTF-16
const language = {
    lang: 1033,
    codepage: 1200 // UTF-16
};
/**
 * Build an executable
 * @param {Options} options
 * @returns An empty promise which is resolved when the executable is built
 */
function exe(options) {
    return __awaiter(this, void 0, void 0, function* () {
        const args = [options.entry, ...(options.pkg || []), '-t', options.target || 'latest-win-x64', '-o', options.out];
        // Build w/ PKG
        yield (0, pkg_1.exec)(args);
        // Modify .exe w/ ResEdit
        const data = (0, fs_1.readFileSync)(options.out);
        const executable = ResEdit.NtExecutable.from(data);
        const res = ResEdit.NtExecutableResource.from(executable);
        const vi = ResEdit.Resource.VersionInfo.fromEntries(res.entries)[0];
        // Remove original filename
        vi.removeStringValue(language, 'OriginalFilename');
        vi.removeStringValue(language, 'InternalName');
        // Product version
        if (options.version) {
            // Convert version to tuple of 3 numbers
            const version = options.version
                .split('.')
                .map(v => Number(v) || 0)
                .slice(0, 3);
            // Update versions
            vi.setProductVersion(...version, 0, language.lang);
            vi.setFileVersion(...version, 0, language.lang);
        }
        // Add additional user specified properties
        if (options.properties) {
            vi.setStringValues(language, options.properties);
        }
        vi.outputToResourceEntries(res.entries);
        // Add icon
        if (options.icon) {
            const iconFile = ResEdit.Data.IconFile.from((0, fs_1.readFileSync)(options.icon));
            ResEdit.Resource.IconGroupEntry.replaceIconsForResource(res.entries, 1, language.lang, iconFile.icons.map(item => item.data));
        }
        // Regenerate and write to .exe
        res.outputResource(executable);
        (0, fs_1.writeFileSync)(options.out, Buffer.from(executable.generate()));
    });
}
module.exports = exe;
